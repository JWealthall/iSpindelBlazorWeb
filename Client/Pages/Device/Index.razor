@page "/device"
@page "/device/{Id:guid}"

@inject IDataHttpRepository Data

@if (_data == null)
{
    <div class="text-center">
        <h1 class="display-5">Device Summary</h1>
    </div>
    <p><em>Loading...</em></p>
}
else if (Id != null)
{
    <div class="text-center">
        <h1 class="display-5">@_data.DeviceName Summary</h1>
    </div>
    @if (_data?.Devices != null && _data.Devices.Count > 0)
    {
        <div class="row justify-content-center">
            <DeviceSummary Device="@_data.Devices[0]" />
        </div>

        <div class="row justify-content-center mt-2">
            <h4 class="">Batches</h4>
        </div>
        @if (_data?.Batches != null && _data.Batches.Count > 0)
        {
            <div class="row justify-content-center">
                @foreach (var b in _data.Batches)
                {
                    <BatchSummary Batch="@b" />
                }
            </div>
        }
        else
        {
            <div class="row justify-content-center mt-2">
                <div class="col text-warning">No batches</div>
            </div>
        }
    }
    else
    {
        <div class="row justify-content-center mt-2">
            <div class="col text-warning">No devices</div>
        </div>
    }
}
else
{
    <div class="text-center">
        <h1 class="display-5">iSpindel Device List</h1>
    </div>

    @if (_data?.Devices != null && _data.Devices.Count > 0)
    {
        <div class="row justify-content-center">
            @foreach (var d in _data.Devices)
            {
                <DeviceSummary Device="@d" />
            }
        </div>
    }
    else
    {
        <div class="row justify-content-center mt-2">
            <div class="col text-warning">No devices</div>
        </div>
    }
}

@code {
    private SummaryDataModel _data = null;

    [Parameter]
    public Guid? Id { get; set; } = null;

    protected override async Task OnParametersSetAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        //_data = null;  // This will make the "Loading" appear between changes
        if (Id != null)
        {
            _data = await Data.GetDeviceSummary(Id.Value);
            if (_data?.Devices != null && _data.Devices.Count > 0) _data.Devices[0].IsDetail = true;
        }
        else
        {
            _data = await Data.GetDevicesSummary();
        }
    }
}
